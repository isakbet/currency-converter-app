{"version":3,"sources":["components/HomePage/Converter.js","components/TopBar/TopBar.js","components/card/Card.component.jsx","components/card-list/Card-List.component.jsx","components/search-box/Search-Box.component.jsx","components/RatesPage/RatesPage.js","components/Footer/Footer.js","components/HomePage/CurrencyConverter.js","components/HistoricRatesPage/HistoricRatesPage.js","App.js","index.js"],"names":["CurrencyTable","props","base","rates","className","scope","map","currency","key","acronym","rate","toFixed","Main","styled","main","Converter","useState","currencies","setCurrencies","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","BASE_URL","CONVERT_API","CURRENCIES_API","fetchData","api","a","fetch","currencyResponse","json","useEffect","then","data","Object","entries","htmlFor","name","id","value","onChange","e","target","type","defaultValue","Math","round","withRouter","pathname","location","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","active","includes","Card","alt","src","substring","CardList","SearchBox","placeholder","handleChange","RatesPage","setState","searchField","state","axios","get","res","ratesArray","idPlaceholder","currencyObj","push","this","filteredCurrencies","filter","toLowerCase","loader","class","viewBox","cx","cy","r","fill","stroke","stroke-width","length","Component","Footer","rel","CurrencyConverter","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","option","AUD","symbol","BGN","BRL","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","HistoricRatesPage","chart","apiURL","setCurrencyOptions","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","setRates","chartRef","useRef","keys","buildChart","labels","label","destroy","Chart","current","getContext","datasets","tension","options","responsive","error","Error","chartLabels","chartData","values","chartLabel","catch","console","message","log","ref","history","createHistory","App","path","exact","component","HomePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef9fc8f2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport './Converter.css'\r\n\r\nconst CurrencyTable = (props) => {\r\n  const { base, rates } = props\r\n  if (!rates) {\r\n    return null\r\n  }\r\n  return (\r\n    <table className='table table-sm bg-light mt-4'>\r\n      <thead>\r\n        <tr>\r\n          <th scope='col'></th>\r\n          <th scope='col' className='text-right pr-4 py-2'>\r\n            1.00 {base}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {rates.map((currency) => (\r\n          <tr key={currency.acronym}>\r\n            <td className='pl-4 py-2'>\r\n              {currency} <small>({currency.acronym})</small>\r\n            </td>\r\n            <td className='text-right pr-4 py-2'>{currency.rate.toFixed(6)}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nconst Converter = () => {\r\n  const [currencies, setCurrencies] = useState([])\r\n  const [fromCurrency, setFromCurrency] = useState('EUR')\r\n  const [toCurrency, setToCurrency] = useState('USD')\r\n  const [fromAmount, setFromAmount] = useState(1)\r\n  const [toAmount, setToAmount] = useState('')\r\n  const [rates, setRates] = useState([])\r\n\r\n  const BASE_URL = 'https://api.frankfurter.app/'\r\n  const CONVERT_API = `${BASE_URL}latest?amount=${fromAmount}&from=${fromCurrency}&to=${toCurrency}`\r\n  const CURRENCIES_API = `${BASE_URL}currencies`\r\n\r\n  const fetchData = async (api) => {\r\n    const currencyResponse = await fetch(api)\r\n    return await currencyResponse.json()\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData(CURRENCIES_API).then((data) => {\r\n      setCurrencies(Object.entries(data))\r\n    })\r\n  }, [CURRENCIES_API])\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency === toCurrency) {\r\n      if (fromAmount < 0 || fromAmount === '') {\r\n        setToAmount('')\r\n      } else {\r\n        setToAmount(fromAmount)\r\n      }\r\n    } else if (fromAmount < 0 || fromAmount === '') {\r\n      setToAmount('')\r\n    } else if (fromAmount === 0) {\r\n      setToAmount(0)\r\n    } else {\r\n      fetchData(CONVERT_API).then((data) => setToAmount(data.rates[toCurrency]))\r\n    }\r\n  }, [fromCurrency, toCurrency, fromAmount, CONVERT_API])\r\n\r\n  const handleFromCurrencyChange = (e) => {\r\n    setFromCurrency(e.target.value)\r\n  }\r\n\r\n  const handleToCurrencyChange = (e) => {\r\n    setToCurrency(e.target.value)\r\n  }\r\n\r\n  const handleFromAmountChange = (e) => {\r\n    setFromAmount(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Main>\r\n        <div className='Converter'>\r\n          <h2>Always get the real exchange rate</h2>\r\n\r\n          <div className='Converter-body'>\r\n            <div>\r\n              <label htmlFor='from'>From</label>\r\n              <br />\r\n              <select\r\n                name='from'\r\n                id='from'\r\n                value={fromCurrency}\r\n                onChange={handleFromCurrencyChange}\r\n              >\r\n                {currencies.map((currency) => (\r\n                  <option value={currency[0]} key={currency[0]}>\r\n                    {currency[1]}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <br />\r\n\r\n              <input\r\n                type='number'\r\n                defaultValue={fromAmount}\r\n                onChange={handleFromAmountChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor='to'>To</label>\r\n              <br />\r\n              <select\r\n                name='to'\r\n                id='to'\r\n                value={toCurrency}\r\n                onChange={handleToCurrencyChange}\r\n              >\r\n                {currencies.map((currency) => (\r\n                  <option value={currency[0]} key={currency[0]}>\r\n                    {currency[1]}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n\r\n              <p className='to-amount'>\r\n                {toAmount !== '' ? Math.round(toAmount * 100) / 100 : ''}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </Main>\r\n      <CurrencyTable base={fromCurrency} rates={rates} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Main = styled.main`\r\n  max-width: 1280px;\r\n  height: 100%;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport default Converter\r\n","import React from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction TopBar({ location }) {\r\n  const { pathname } = location;\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n      <Navbar.Brand href=\"/\"> Currency Converter </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <Nav.Link href=\"/\" active={pathname === \"/\"}>\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            href=\"/rates\"\r\n            active={pathname.includes(\"/rates\")}>\r\n            Current Rates\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            href=\"/historicrates\"\r\n            active={pathname.includes(\"/historicrates\")}>\r\n            Historic Rates\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default withRouter(TopBar);","import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img className=\"card-img\" alt=\"country flag\" src={`https://www.countryflags.io/${props.currency.name.substring(0,2)}/flat/64.png`}/>\r\n        <h2>{props.currency.name}</h2>\r\n        <p>€1 EUR =  {props.currency.rate.toFixed(2)} {props.currency.name}</p>\r\n    </div>\r\n);\r\n\r\nexport default Card;","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport Card from '../card/Card.component';\r\n\r\nconst CardList = (props) => (\r\n    <div className=\"card-list\">\r\n        {props.currencies.map(currency => (\r\n            <Card key={currency.id} currency={currency}/>\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className=\"search\"\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n    />\r\n)\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport CardList from '../card-list/Card-List.component'\r\nimport { SearchBox } from '../search-box/Search-Box.component'\r\nimport './RatesPage.css'\r\n\r\nclass RatesPage extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      currencies: [],\r\n      searchField: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('https://api.frankfurter.app/latest?base=EUR').then((res) => {\r\n      const ratesArray = []\r\n      let idPlaceholder = 0\r\n\r\n      for (let [key, value] of Object.entries(res.data.rates)) {\r\n        let currencyObj = {\r\n          id: idPlaceholder,\r\n          name: key,\r\n          rate: value,\r\n        }\r\n        ratesArray.push(currencyObj)\r\n        idPlaceholder++\r\n      }\r\n\r\n      this.setState({ currencies: ratesArray })\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value }, () => {})\r\n  }\r\n\r\n  render() {\r\n    const { currencies, searchField } = this.state\r\n    const filteredCurrencies = currencies.filter((currency) => {\r\n      return currency.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n\r\n    const loader = (\r\n      <div class='profile-main-loader'>\r\n        <div class='loader'>\r\n          <svg class='circular-loader' viewBox='25 25 50 50'>\r\n            <circle\r\n              class='loader-path'\r\n              cx='50'\r\n              cy='50'\r\n              r='20'\r\n              fill='none'\r\n              stroke='#7dc7e2'\r\n              stroke-width='2'\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <div className='RatesPage'>\r\n        <h4> Current Rates </h4>\r\n        <SearchBox\r\n          placeholder='search currencies'\r\n          handleChange={this.handleChange}\r\n        />\r\n        {currencies.length === 0 ? (\r\n          loader\r\n        ) : (\r\n          <CardList currencies={filteredCurrencies} />\r\n        )}\r\n        {searchField.length > 0 && filteredCurrencies.length === 0 && (\r\n          <h2>Currency not found...</h2>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RatesPage\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\n\r\nfunction Footer() { \r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <footer className=\"p-1 bg-dark\">\r\n        <div className=\"mb-2\">\r\n          <a className=\"badge badge-light\" href=\"https://github.com/isakbet\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\r\n        </div>\r\n        <div>\r\n          <span className=\"mr-3 text-secondary\">Built by <a href=\"https://yoseph.dev\" target=\"_blank\" rel=\"noopener noreferrer\">Yoseph Berhane</a> with ☕ and 💚</span>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction CurrencyConverter(props) {\r\n    const {\r\n        currencyOptions,\r\n        selectedCurrency,\r\n        onChangeCurrency,\r\n        onChangeAmount,\r\n        amount\r\n    } = props;\r\n    return (\r\n        <div className=\"currency-converter\">\r\n            <select\r\n                value={selectedCurrency}\r\n                onChange={onChangeCurrency}\r\n                className=\"custom-select mr-sm-2\"\r\n            >\r\n                {currencyOptions.map(option => (\r\n                    <option key={option} value={option}>\r\n                        {option}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <input\r\n                type=\"tel\"\r\n                value={amount}\r\n                onChange={onChangeAmount}\r\n                placeholder=\"Currency\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrencyConverter","import React, { useEffect, useState, useRef } from 'react';\r\nimport './HistoricRatesPage.css';\r\nimport styled from 'styled-components';\r\nimport CurrencyConverter from '../HomePage/CurrencyConverter.js';\r\nimport Chart from 'chart.js';\r\n\r\nconst currencies = {\r\n  AUD: {\r\n    symbol: '$',\r\n    name: 'Australian dollar',\r\n  },\r\n  BGN: {\r\n    symbol: 'лв',\r\n    name: 'Bulgarian lev',\r\n  },\r\n  BRL: {\r\n    symbol: 'R$',\r\n    name: 'Brazilian real',\r\n  },\r\n  CAD: {\r\n    symbol: '$',\r\n    name: 'Canadian dollar',\r\n  },\r\n  CHF: {\r\n    symbol: 'Fr',\r\n    name: 'Swiss franc',\r\n  },\r\n  CNY: {\r\n    symbol: '¥',\r\n    name: 'Chinese yuan',\r\n  },\r\n  CZK: {\r\n    symbol: 'Kč',\r\n    name: 'Czech koruna',\r\n  },\r\n  DKK: {\r\n    symbol: 'kr',\r\n    name: 'Danish krone',\r\n  },\r\n  EUR: {\r\n    symbol: '€',\r\n    name: 'Euro',\r\n  },\r\n  GBP: {\r\n    symbol: '£',\r\n    name: 'British pound',\r\n  },\r\n  HKD: {\r\n    symbol: '$',\r\n    name: 'Hong Kong dollar',\r\n  },\r\n  HRK: {\r\n    symbol: 'kn',\r\n    name: 'Croatian kuna',\r\n  },\r\n  HUF: {\r\n    symbol: 'Ft',\r\n    name: 'Hungarian forint',\r\n  },\r\n  IDR: {\r\n    symbol: 'Rp',\r\n    name: 'Indonesian rupiah',\r\n  },\r\n  ILS: {\r\n    symbol: '₪',\r\n    name: 'Israeli new shekel',\r\n  },\r\n  INR: {\r\n    symbol: '₹',\r\n    name: 'Indian rupee',\r\n  },\r\n  ISK: {\r\n    symbol: 'kr',\r\n    name: 'Icelandic króna',\r\n  },\r\n  JPY: {\r\n    symbol: '¥',\r\n    name: 'Japanese yen',\r\n  },\r\n  KRW: {\r\n    symbol: '₩',\r\n    name: 'South Korean won',\r\n  },\r\n  MXN: {\r\n    symbol: '$',\r\n    name: 'Mexican peso',\r\n  },\r\n  MYR: {\r\n    symbol: 'RM',\r\n    name: 'Malaysian ringgit',\r\n  },\r\n  NOK: {\r\n    symbol: 'kr',\r\n    name: 'Norwegian krone',\r\n  },\r\n  NZD: {\r\n    symbol: '$',\r\n    name: 'New Zealand dollar',\r\n  },\r\n  PHP: {\r\n    symbol: '₱',\r\n    name: 'Philippine peso',\r\n  },\r\n  PLN: {\r\n    symbol: 'zł',\r\n    name: 'Polish złoty ',\r\n  },\r\n  RON: {\r\n    symbol: 'lei',\r\n    name: 'Romanian leu',\r\n  },\r\n  RUB: {\r\n    symbol: '₽',\r\n    name: 'Russian ruble',\r\n  },\r\n  SEK: {\r\n    symbol: 'kr',\r\n    name: 'Swedish krona',\r\n  },\r\n  SGD: {\r\n    symbol: '$',\r\n    name: 'Singapore dollar',\r\n  },\r\n  THB: {\r\n    symbol: '฿',\r\n    name: 'Thai baht',\r\n  },\r\n  TRY: {\r\n    symbol: '₺',\r\n    name: 'Turkish lira',\r\n  },\r\n  USD: {\r\n    symbol: '$',\r\n    name: 'United States dollar',\r\n  },\r\n  ZAR: {\r\n    symbol: 'R',\r\n    name: 'South African rand',\r\n  },\r\n}\r\n\r\n\r\nfunction HistoricRatesPage() {\r\n  const apiURL = 'https://api.frankfurter.app/latest';\r\n\r\n  const [currencyOptions, setCurrencyOptions] = useState([]);\r\n  const [fromCurrency, setFromCurrency] = useState('EUR');\r\n  const [toCurrency, setToCurrency] = useState('USD');\r\n  const [exchangeRate, setExchangeRate] = useState(1);\r\n  const [amount, setAmount] = useState(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\r\n  const [rates, setRates] = useState([]);\r\n\r\n\r\n  const chartRef = useRef(null);\r\n  let chart;\r\n\r\n  let toAmount, fromAmount;\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount * exchangeRate;\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = amount / exchangeRate;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(apiURL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\r\n        setExchangeRate(data.rates[toCurrency]);\r\n        const rates = Object.keys(data.rates)\r\n          .filter(acronym => acronym !== fromCurrency)\r\n          .map(acronym => ({\r\n            acronym,\r\n            rate: data.rates[acronym],\r\n            name: currencies[acronym].name,\r\n            symbol: currencies[acronym].symbol,\r\n          }))\r\n        setRates(rates);\r\n      });\r\n  }, [fromCurrency, toCurrency]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const buildChart = (labels, data, label) => {\r\n    if (typeof chart !== \"undefined\") {\r\n      chart.destroy();\r\n    }\r\n    chart = new Chart(chartRef.current.getContext(\"2d\"), {\r\n      type: 'line',\r\n      data: {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: label,\r\n            data,\r\n            fill: false,\r\n            tension: 0,\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {   \r\n\r\n    fetch(`https://api.frankfurter.app/2020-01-01..2020-01-31`)\r\n      .then(data => {\r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n\r\n        const chartLabels = Object.keys(data.rates);\r\n        const chartData = Object.values(data.rates).map(rate => rate[toCurrency]);\r\n        const chartLabel = `${fromCurrency}/${toCurrency}`;\r\n        buildChart(chartLabels, chartData, chartLabel);\r\n      })\r\n      .catch(error => console.error(error.message));\r\n  }, [buildChart, fromCurrency, toCurrency])\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency != null && toCurrency != null) {\r\n      fetch(`${apiURL}?base=${fromCurrency}`)\r\n        .then(res => res.json())\r\n        .then(data => setExchangeRate(data.rates[toCurrency]))\r\n    }\r\n  }, [fromCurrency, toCurrency])\r\n\r\n\r\n  function handleFromAmountChange(e) {\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(true)\r\n  }\r\n\r\n  function handleToAmountChange(e) {\r\n    setAmount(e.target.value)\r\n    setAmountInFromCurrency(false)\r\n  }\r\n\r\n  console.log('render');\r\n\r\n  return (\r\n    <>\r\n      <Main>\r\n        <CurrencyConverter\r\n          currencyOptions={currencyOptions}\r\n          selectedCurrency={fromCurrency}\r\n          onChangeCurrency={e => setFromCurrency(e.target.value)}\r\n          onChangeAmount={handleFromAmountChange}\r\n          amount={fromAmount}\r\n        />\r\n        <CurrencyConverter\r\n          currencyOptions={currencyOptions}\r\n          selectedCurrency={toCurrency}\r\n          onChangeCurrency={e => setToCurrency(e.target.value)}\r\n          onChangeAmount={handleToAmountChange}\r\n          amount={toAmount}\r\n        />\r\n      </Main>\r\n      <canvas ref={chartRef} />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst Main = styled.main`\r\n  max-width: 1280px;\r\n  height: 100%;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\n\r\nexport default HistoricRatesPage;","import React from \"react\";\r\nimport { Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport HomePage from \"./components/HomePage/Converter\";\r\nimport TopBar from \"./components/TopBar/TopBar\";\r\nimport RatesPage from \"./components/RatesPage/RatesPage\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport {createBrowserHistory as createHistory } from \"history\";\r\nimport HistoricRatesPage from './components/HistoricRatesPage/HistoricRatesPage';\r\nconst history = createHistory();\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <TopBar />\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/rates\" exact component={RatesPage} />\r\n        <Route path=\"/historicrates\" exact component={HistoricRatesPage} />              \r\n      </Router>\r\n      <Footer /> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}